buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

repositories {
		maven { // The repo from which to get waila
			name "Mobius Repo"
			url "http://mobiusstrip.eu/maven"
		}
		maven { // the repo from which to get NEI and stuff 
			name 'CB Repo'
			url "http://chickenbones.net/maven/"
		}
		maven {
			name = "ic2"
			url = "http://maven.ic2.player.to/"
		}
}

apply plugin: 'forge'

version = "1.2.5"
group= "igwmod" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "IGW-Mod"

dependencies {
  //  def f = new File('dep/')
 //   if(f.exists()){
 //       f.delete()
//    }
  //  f.mkdirs()
  ///  if(!f.exists()){
 //       f.mkdir()
  //  }
	//println("  Downloading dependencies!")
   // ant.get(src: 'http://files.minecraftforge.net/CodeChickenLib/CodeChickenLib-dev-1.6.4-1.0.0.62.jar', dest: 'dep')
	//file("dep/CodeChickenLib-dev-1.6.4-1.0.0.62.jar").renameTo(file("dep/ccl.jar"))
	
	println("  Adding dependencies!")

	
	
	//compile "codechicken:CodeChickenLib:1.7.10-1.1.1.95:dev"
	compile "codechicken:CodeChickenCore:1.7.10-1.0.2.11:dev"
	compile "codechicken:NotEnoughItems:1.7.10-1.0.2.26:dev"
	//compile "codechicken:ForgeMultipart:1.7.10-1.1.0.297:dev"
	//compile "mcp.mobius.waila:Waila:1.5.3_1.7.10"
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //compile 'net.industrial-craft:industrialcraft-2:2.2.504-experimental:api'
	//compile files("../dep/IGW-Mod1.0.2dev.jar

	println("  Finished adding dependencies!")
}

minecraft {
    version = "1.7.10-10.13.0.1185"
	runDir = "minecraft/assets"
}
// configure the source folders
sourceSets {
    main {
        java {
            srcDir 'src'
            // exclude 'some exclusion'
            // include 'some inclusion'
        }
        resources {
            srcDir 'resources'
            exclude '**/.md' // exclude readme from localization repo
			exclude 'Models'
			exclude 'unused resources'
			exclude '**/.txt'
			exclude '**/.docx'
            // exclude 'some exclusion'
            // include 'some inclusion'
        }
    }
	
	api {
    java {

    }
}
}

processResources
{
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task("uploadJars", dependsOn:"reobf") {
    description = "uploads JARs"
    if (System.getenv("local_maven") != null) {
        apply plugin: 'maven'
        uploadArchives {
            repositories {
                mavenDeployer {
                    repository(url: "file://" + System.getenv("local_maven"))
                }
            }
        }
    }
}